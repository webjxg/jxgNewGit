require(['/js/zlib/app.js'], function(App) {
    //引入用户登录校验
    require(['checkUser','treeTable']);

    var PageModule = {
        listInit: function(){
            require(['ztree_my','easyui_my'],function(ZTree, easyuiObj){
                var ztree = new ZTree();
                Api.ajaxJson(Api.admin+'/api/sys/SysOrg/leftTree','json',function(result){
                    if(result.success){
                        var ztreeSetting = {
                            callback:{
                                onClick: function (e, treeId, node){
                                    if(node.id){
                                        updatason(node.id);
                                    }
                                }
                            }
                        };
                        var treeObj = ztree.loadData($("#tree"),result.rows,false,ztreeSetting);
                    }
                });
                function updatason(node){
                    load(node);
                }
                var pageLoad = function () {
                    load(0);
                };
                //立即调用
                pageLoad();

                // 加载右侧数据
                function load(node) {
                    Api.ajaxJson(Api.admin+"/api/sys/SysOrg/treeJson/"+node,{},function(tableData){
                        if(tableData.success){
                            $('#tt').treegrid({
                                idField:'id',
                                treeField:'name',
                                collapsible: true,
                                fitColumns: true,
                                singleSelect : true,
                                columns:[[
                                    {field:'name',title:'机构名称',width:150,align:'left'},
                                    {field:'typeLabel',title:'机构类型',width:80,align:'center'},
                                    {field:'gradeLabel',title:'机构等级',width:80,align:'center'},
                                    {field:"text",title:"操作",align:'center',width:400,formatter: function(value,row,index){
                                            if(row.type=="1"|| row.type=="0"){
                                                return "<a class='btn  btn-info btn-check' id='"+ row.id+"'><i class='fa fa-search-plus'></i>查看</a>" +
                                                    " <a class='btn btn-success btn-mr btn-change' id='"+ row.id+"'><i class='fa icon-change'></i>修改</a>" +
                                                    "<a class='btn   btn-xs btn-allotApp' id='"+ row.id+"'><i class='fa fa-pie-chart'></i> 分配应用</a>" +
                                                    " <a class='btn bg-f75c5c btn-delete' id='"+ row.id+"'><i class='fa fa-trash'></i> 删除</a>"  +
                                                    " <a class='btn  btn-add btn-target' id='"+ row.id+"'><i class='fa fa-plus'></i>添加下级指标</a>";
                                            }else{
                                                return "<a class='btn  btn-info btn-check' id='"+ row.id+"'><i class='fa fa-search-plus'></i>查看</a>" +
                                                    " <a class='btn btn-success btn-mr btn-change' id='"+ row.id+"'><i class='fa icon-change'></i>修改</a>" +
                                                    "<a class='btn  btn-warning btn-xs btn-allot' id='"+ row.id+"' data-type='"+ row.type+"'><i class='fa fa-user'></i> 分配用户</a> " +
                                                    "<a class='btn   btn-xs btn-allotApp' id='"+ row.id+"'><i class='fa fa-pie-chart'></i> 分配应用</a>" +
                                                    " <a class='btn bg-f75c5c btn-delete' id='"+ row.id+"'><i class='fa fa-trash'></i> 删除</a>"  +
                                                    " <a class='btn  btn-add btn-target' id='"+ row.id+"'><i class='fa fa-plus'></i>添加下级指标</a>";
                                            }
                                        }},
                                ]],
                                data:tableData,
                            });
                            btncilck();
                        }else{
                            Mom.layMsg(tableData.message)
                        }
                    })
                }

                function btncilck(){
                    // 查看
                    $('.btn-check').click(function () {
                        var id = $(this).attr('id');
                        Bus.openDialog('查看组织机构信息', './systemSettings/orgCheckView.html?id=' + id, '800px', '550px');
                    });
                    //修改
                    $('.btn-change').click(function () {
                        var id = $(this).attr('id');
                        // openEditDialogDic('修改组织机构信息', './systemSettings/orgCheckView.html?id=' + id, '800px', '550px');
                        Bus.openEditDialog('修改组织机构信息', './systemSettings/orgCheckView.html?id=' + id, '800px', '550px', saveCallback);
                    });
                    //删除
                    $('.btn-delete').click(function () {
                        var id = $(this).attr('id');
                        deleteItem('确定要删除该机构吗', Api.admin+'/api/sys/SysOrg/del/',id)
                    });
                    // 添加下级菜单
                    $('.btn-add').click(function(){
                        var id = $(this).attr('id');
                        Bus.openEditDialog('添加下级菜单','./systemSettings/orgCheckView.html?pid='+id,'800px','550px', addNextCallback)
                    });
                    // 分配用户
                    $('.btn-allot').click(function(){
                        var id = $(this).attr('id');
                        var type = $(this).attr('data-type');
                        Bus.openDialog('分配用户','./systemSettings/orgAssign.html?id='+id+'&type='+type,'800px','600px');
                    });
                    // 分配应用
                    $('.btn-allotApp').click(function(){
                        var id = $(this).attr('id');
                        Bus.openDialog('分配应用','./systemSettings/orgAllotApp.html?id='+id,'800px','600px');
                    });
                }

                //编辑、新增回调函数
                function saveCallback(layerIdx, layero){
                    var body = top.layer.getChildFrame('body', layerIdx);  //获取子iframe
                    var iframeWin = layero.find('iframe')[0].contentWindow;
                    //提交内部表单
                    var formData = iframeWin.getFormData();
                    if(formData){
                        var data = formData.data;
                        Api.ajaxJson(formData.url, JSON.stringify(data), function(result){
                            if(result.success == true){
                                Mom.layMsg('操作成功',{time: 1000});
                                // 通过id获取要修改数据
                                var editNode = '';
                                Api.ajaxJson(Api.admin+"/api/sys/SysOrg/treeJson/"+0,{},function(tableData){
                                    var ArrayData =tableData.rows;
                                    getNodeId(ArrayData);

                                    function getNodeId (ArrayData) {
                                        for (var i = 0; i < ArrayData.length; i++) {
                                            if (ArrayData[i].id == data.id) {
                                                editNode = ArrayData[i];
                                                return false;
                                            }
                                            if (ArrayData[i].children.length > 0) {
                                                getNodeId(ArrayData[i].children);
                                            }
                                        }
                                    }
                                    var data1 = {
                                        name: editNode.name ,
                                        typeLabel: editNode.typeLabel,
                                        gradeLabel: editNode.gradeLabel
                                    };
                                    // return false;
                                    easyuiObj.tg_editTreegridNode('#tt',data.id, data1);
                                    btncilck();

                                    var treeObj = $.fn.zTree.getZTreeObj("tree");
                                    var node = treeObj.getNodeByParam("id", data.id, null);
                                    node.name = data.name;
                                    treeObj.updateNode(node);
                                });
                                setTimeout(function(){
                                    //关闭弹出层
                                    top.layer.close(layerIdx);

                                },500);
                            }else{
                                Mom.layAlert(result.message);
                            }
                        });
                    }
                }

                //添加下级指标回调函数
                function addNextCallback(layerIdx, layero){
                    var body = top.layer.getChildFrame('body', layerIdx);  //获取子iframe
                    var iframeWin = layero.find('iframe')[0].contentWindow;
                    //提交内部表单
                    var formData = iframeWin.getFormData();
                    if(formData){
                        var data = formData.data;
                        Api.ajaxJson(formData.url, JSON.stringify(data), function(result){
                            if(result.success == true){
                                Mom.layMsg('操作成功',{time: 1000});
                                // 通过id获取要修改数据
                                var editNode = '';
                                Api.ajaxJson(Api.admin+"/api/sys/SysOrg/treeJson/"+0,{},function(tableData){
                                    var ArrayData =tableData.rows;
                                    getNodeId(ArrayData);
                                    function getNodeId (data) {
                                        data.forEach(function(item){
                                            if(item.name == data.name && item.code == data.code && item.grade == data.grade){
                                                editNode = item;
                                            }
                                            if(item.children.length > 0 ){
                                                getNodeId(item.children);
                                            }
                                        })
                                    }
                                    // 添加到父节点下面
                                    var data = [{
                                        id: editNode.id,
                                        name: editNode.name ,
                                        typeLabel: editNode.typeLabel,
                                        gradeLabel: editNode.gradeLabel
                                    }];
                                    easyuiObj.tg_appendTreegridNode('#tt',data.parent.id, data);
                                    btncilck();
                                    // 重新加载左侧树，由于存在异步操作，用到定时器
                                    setTimeout(function(){
                                        var newNodes  = '';
                                        Api.ajaxJson(Api.admin+'/api/sys/SysOrg/leftTree',{},function (data) {
                                            var ArrayDic =data.rows;
                                            ArrayDic.forEach(function(item,index){
                                                if(item.name == data.name & item.type == data.type){
                                                    newNodes  = item;
                                                }
                                            });
                                            var treeObj = $.fn.zTree.getZTreeObj("tree");
                                            var node = treeObj.getNodeByParam("id",newNodes.pId, null);
                                            newNode = treeObj.addNodes(node, newNodes);
                                        });
                                    },500);
                                });
                                setTimeout(function(){
                                    //关闭弹出层
                                    top.layer.close(layerIdx);
                                },1000);
                            }else{
                                Mom.layAlert(result.message);
                            }
                        });
                    }
                }

                //删除单条数据
                function deleteItem(mess,url,id){
                    //var ids= eleP.find('input.i-checks').attr('id')
                    var data = {id:id} || {};
                    top.layer.confirm(mess, {icon: 3, title:'系统提示'},function(index){
                        Api.ajaxForm(url,data,function(result){
                            if(result.success == true){
                                require(['easyui_my'],function(easyuiObj){
                                    easyuiObj.tg_removeTreegridNode('#tt',id);
                                    btncilck();
                                });
                                // 重新加载左侧树，由于存在异步操作，用到定时器
                                setTimeout(function(){
                                    var treeObj = $.fn.zTree.getZTreeObj("tree");
                                    var node = treeObj.getNodeByParam("id",id, null);
                                    treeObj.removeNode(node);
                                },1000);
                            }
                            top.layer.close(index);
                        });
                        return false;
                    });
                }
            });

        },

        //查看(修改)组织机构信息 && 添加下级菜单
        formInit: function(){
            Mom.include('myCss_comInnerTable', '', [
                '../css/comInnerTable.css',
            ]);
            // 获取机构类型
            Bus.createSelect(Api.admin+"/api/sys/SysDict/type/orgType","#type",'value','label');
            // 获取机构等级
            Bus.createSelect(Api.admin+"/api/sys/SysDict/type/orgGrade","#grade",'value','label');

            var id = Mom.getUrlParam('id');
            var pid = Mom.getUrlParam('pid');
            $("#id").val(id);
            if (id!==null) {
                /*此处后端接口  id为弹出窗口自带的id 通过浏览器方法传参得到*/
                var url = Api.admin+"/api/sys/SysOrg/view/" + id;
                Api.ajaxForm(url, {}, function (result) {
                    if (result.success) {
                        var SysOrg = result.SysOrg;
                        Validator.renderData(SysOrg, $('#inputForm'));
                        /*运行把ajax数据渲染到弹出窗口中*/
                        $('#pname').val(SysOrg.primaryPerson?SysOrg.primaryPerson.name:"");
                        $('#dname').val(SysOrg.deputyPerson?SysOrg.deputyPerson.name:"");
                        $('#parentName').val(result.parentName);
                    } else {
                        Mom.layMsg(result.message);
                    }
                });
            }else if(pid!==null){
                var url = Api.admin+"/api/sys/SysOrg/view/" + pid;
                Api.ajaxForm(url, {}, function (result) {
                    if (result.success) {
                        var SysOrg = result.SysOrg;
                        $('#parentName').val(SysOrg.name);
                        $('#parentId').val(SysOrg.id);
                    } else {
                        Mom.layMsg(result.message);
                    }
                });
            }

            $('#parentName').on('dblclick',selParent);
            $('#parentNameButton').on('click',selParent);
            //主负责人
            $('#pname').on('dblclick',function(){selUser('#pnameId','#pname');});
            $('#primaryPersonButton').on('click',function(){selUser('#pnameId','#pname');});
            //副负责人
            $('#dname').on('dblclick',function(){selUser('#dnameId','#dname');});
            $('#deputyPersonButton').on('click',function(){selUser('#dnameId','#dname');});

            /**
             * 选择上级机构
             */
            function selParent(){
                var options = {defaultVals: $('#parentId').val() };
                Bus.openOrgSelect('选择上级机构',{},options,function(selResult, layIdx, layero){
                    $('#parentId').val(selResult.id);
                    $('#parentName').val(selResult.name);
                    return true;
                },function(){
                    $('#parentId').val('');
                    $('#parentName').val('');
                });
            }

            //选择负责人
            function selUser(id, name){
                Bus.openSelUserWin('选择负责人',{},{},function(selResult, layIdx, layero){
                    $(id).val(selResult.id);
                    $(name).val(selResult.name);
                    return true;
                },function(){
                    $(id).val('');
                    $(name).val('');
                });
            }

            window.getFormData = function(){
                if(!Validator.valid(document.forms[0],1.3)){
                    return;
                }
                var formObj = $('#inputForm');
                return {
                    url: formObj.attr('action'),
                    data: formObj.serializeJSON()
                }
            }
        },

    };

    $(function(){
        //机构管理首页
        if($('#orgIndex').length > 0){
            PageModule.listInit();
        }
        //查看(修改)组织机构信息 && 添加下级菜单
        else if($('#orgCheckView').length > 0){
            PageModule.formInit();
        }

    });
});